apiVersion: argoproj.io/v1alpha1
kind: ApplicationSet
metadata:
  name: monitoring-applications # ApplicationSet 이름 (원하는 이름으로 변경 가능)
  namespace: argocd
spec:
  generators:
  - list:
      elements:
      - appName: grafana # 첫 번째 Application: Grafana 설정
        helmChartRepo: https://github.com/grafana/helm-charts.git
        helmChartPath: charts/grafana
        helmValueFilePath: $value-repo/grafana-app/grafana-values.yaml # Grafana values 파일 경로
        destinationNamespace: grafana # Grafana 배포 네임스페이스
      - appName: prometheus # 두 번째 Application: Prometheus 설정
        helmChartRepo: https://github.com/prometheus-community/helm-charts
        helmChartPath: charts/prometheus
        helmValueFilePath: $value-repo/prometheus-app/prometheus-values.yaml # Prometheus values 파일 경로
        destinationNamespace: prometheus # Prometheus 배포 네임스페이스
  template:
    metadata:
      name: '{{appName}}' # Application 이름 템플릿 (grafana 또는 prometheus)
      namespace: argocd
    spec:
      project: default
      sources:
      - repoURL: '{{helmChartRepo}}' # Helm Chart Repository URL (변수 사용)
        targetRevision: main
        path: '{{helmChartPath}}' # Helm Chart Path (변수 사용)
        helm:
          valueFiles:
            - '{{helmValueFilePath}}' # values 파일 경로 (변수 사용)
      - repoURL: https://github.com/Junhyeok9904/kind-monitoring-demo.git # values 파일 Repository URL (고정)
        ref: value-repo
      destination:
        server: 'https://kubernetes.default.svc'
        namespace: '{{destinationNamespace}}' # 배포 네임스페이스 (변수 사용)
      syncPolicy:
        automated:
          prune: true
          selfHeal: true
        syncOptions:
        - CreateNamespace=true # 네임스페이스 자동 생성 옵션 추가 (Grafana, Prometheus 공통)